{"id":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","dependencies":[{"name":"/Users/home/Documents/projektid/three/package.json","includedInParent":true,"mtime":1752075948167},{"name":"/Users/home/Documents/projektid/three/node_modules/three/package.json","includedInParent":true,"mtime":1752055084410},{"name":"three","loc":{"line":4,"column":7,"index":33},"parent":"/Users/home/Documents/projektid/three/node_modules/three/examples/jsm/shaders/GodRaysShader.js","resolved":"/Users/home/Documents/projektid/three/node_modules/three/build/three.module.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GodRaysGenerateShader = exports.GodRaysFakeSunShader = exports.GodRaysDepthMaskShader = exports.GodRaysCombineShader = void 0;\nvar _three = require(\"three\");\n/**\n * @module GodRaysShader\n * @three_import import * as GodRaysShader from 'three/addons/shaders/GodRaysShader.js';\n */\n\n/**\n * God-rays (crepuscular rays)\n *\n * Similar implementation to the one used by Crytek for CryEngine 2 [Sousa2008].\n * Blurs a mask generated from the depth map along radial lines emanating from the light\n * source. The blur repeatedly applies a blur filter of increasing support but constant\n * sample count to produce a blur filter with large support.\n *\n * My implementation performs 3 passes, similar to the implementation from Sousa. I found\n * just 6 samples per pass produced acceptable results. The blur is applied three times,\n * with decreasing filter support. The result is equivalent to a single pass with\n * 6*6*6 = 216 samples.\n *\n * References:\n * - [Sousa2008, Crysis Next Gen Effects, GDC2008]{@link http://www.crytek.com/sites/default/files/GDC08_SousaT_CrysisEffects.ppt}.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nvar GodRaysDepthMaskShader = exports.GodRaysDepthMaskShader = {\n  name: 'GodRaysDepthMaskShader',\n  uniforms: {\n    tInput: {\n      value: null\n    }\n  },\n  vertexShader: /* glsl */\"\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t vUv = uv;\\n\\t\\t gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n\\t }\",\n  fragmentShader: /* glsl */\"\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tuniform sampler2D tInput;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tgl_FragColor = vec4( 1.0 ) - texture2D( tInput, vUv );\\n\\n\\t\\t}\"\n};\n\n/**\n * The god-ray generation shader.\n *\n * First pass:\n *\n * The depth map is blurred along radial lines towards the \"sun\". The\n * output is written to a temporary render target (I used a 1/4 sized\n * target).\n *\n * Pass two & three:\n *\n * The results of the previous pass are re-blurred, each time with a\n * decreased distance between samples.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nvar GodRaysGenerateShader = exports.GodRaysGenerateShader = {\n  name: 'GodRaysGenerateShader',\n  uniforms: {\n    tInput: {\n      value: null\n    },\n    fStepSize: {\n      value: 1.0\n    },\n    vSunPositionScreenSpace: {\n      value: new _three.Vector3()\n    }\n  },\n  vertexShader: /* glsl */\"\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t vUv = uv;\\n\\t\\t gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n\\t }\",\n  fragmentShader: /* glsl */\"\\n\\n\\t\\t#define TAPS_PER_PASS 6.0\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tuniform sampler2D tInput;\\n\\n\\t\\tuniform vec3 vSunPositionScreenSpace;\\n\\t\\tuniform float fStepSize; // filter step size\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t// delta from current pixel to \\\"sun\\\" position\\n\\n\\t\\t\\tvec2 delta = vSunPositionScreenSpace.xy - vUv;\\n\\t\\t\\tfloat dist = length( delta );\\n\\n\\t\\t// Step vector (uv space)\\n\\n\\t\\t\\tvec2 stepv = fStepSize * delta / dist;\\n\\n\\t\\t// Number of iterations between pixel and sun\\n\\n\\t\\t\\tfloat iters = dist/fStepSize;\\n\\n\\t\\t\\tvec2 uv = vUv.xy;\\n\\t\\t\\tfloat col = 0.0;\\n\\n\\t\\t// This breaks ANGLE in Chrome 22\\n\\t\\t//\\t- see http://code.google.com/p/chromium/issues/detail?id=153105\\n\\n\\t\\t/*\\n\\t\\t// Unrolling didn't do much on my hardware (ATI Mobility Radeon 3450),\\n\\t\\t// so i've just left the loop\\n\\n\\t\\t\\\"for ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\\\",\\n\\n\\t\\t// Accumulate samples, making sure we don't walk past the light source.\\n\\n\\t\\t// The check for uv.y < 1 would not be necessary with \\\"border\\\" UV wrap\\n\\t\\t// mode, with a black border color. I don't think this is currently\\n\\t\\t// exposed by three.js. As a result there might be artifacts when the\\n\\t\\t// sun is to the left, right or bottom of screen as these cases are\\n\\t\\t// not specifically handled.\\n\\n\\t\\t\\\"\\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\\\",\\n\\t\\t\\\"\\tuv += stepv;\\\",\\n\\n\\t\\t\\\"}\\\",\\n\\t\\t*/\\n\\n\\t\\t// Unrolling loop manually makes it work in ANGLE\\n\\n\\t\\t\\tfloat f = min( 1.0, max( vSunPositionScreenSpace.z / 1000.0, 0.0 ) ); // used to fade out godrays\\n\\n\\t\\t\\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\\n\\t\\t\\tuv += stepv;\\n\\n\\t\\t\\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\\n\\t\\t\\tuv += stepv;\\n\\n\\t\\t\\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\\n\\t\\t\\tuv += stepv;\\n\\n\\t\\t\\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\\n\\t\\t\\tuv += stepv;\\n\\n\\t\\t\\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\\n\\t\\t\\tuv += stepv;\\n\\n\\t\\t\\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\\n\\t\\t\\tuv += stepv;\\n\\n\\t\\t// Should technically be dividing by 'iters but 'TAPS_PER_PASS' smooths out\\n\\t\\t// objectionable artifacts, in particular near the sun position. The side\\n\\t\\t// effect is that the result is darker than it should be around the sun, as\\n\\t\\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\\n\\t\\t// When the result is inverted (in the shader 'godrays_combine this produces\\n\\t\\t// a slight bright spot at the position of the sun, even when it is occluded.\\n\\n\\t\\t\\tgl_FragColor = vec4( col/TAPS_PER_PASS );\\n\\t\\t\\tgl_FragColor.a = 1.0;\\n\\n\\t\\t}\"\n};\n\n/**\n * Additively applies god rays from texture tGodRays to a background (tColors).\n * fGodRayIntensity attenuates the god rays.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nvar GodRaysCombineShader = exports.GodRaysCombineShader = {\n  name: 'GodRaysCombineShader',\n  uniforms: {\n    tColors: {\n      value: null\n    },\n    tGodRays: {\n      value: null\n    },\n    fGodRayIntensity: {\n      value: 0.69\n    }\n  },\n  vertexShader: /* glsl */\"\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvUv = uv;\\n\\t\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n\\t\\t}\",\n  fragmentShader: /* glsl */\"\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tuniform sampler2D tColors;\\n\\t\\tuniform sampler2D tGodRays;\\n\\n\\t\\tuniform float fGodRayIntensity;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\\n\\t\\t// objects black, the god-rays will be white streaks. Therefore value is inverted\\n\\t\\t// before being combined with tColors\\n\\n\\t\\t\\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\\n\\t\\t\\tgl_FragColor.a = 1.0;\\n\\n\\t\\t}\"\n};\n\n/**\n * A dodgy sun/sky shader. Makes a bright spot at the sun location. Would be\n * cheaper/faster/simpler to implement this as a simple sun sprite.\n *\n * @constant\n * @type {Object}\n */\nvar GodRaysFakeSunShader = exports.GodRaysFakeSunShader = {\n  name: 'GodRaysFakeSunShader',\n  uniforms: {\n    vSunPositionScreenSpace: {\n      value: new _three.Vector3()\n    },\n    fAspect: {\n      value: 1.0\n    },\n    sunColor: {\n      value: new _three.Color(0xffee00)\n    },\n    bgColor: {\n      value: new _three.Color(0x000000)\n    }\n  },\n  vertexShader: /* glsl */\"\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvUv = uv;\\n\\t\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n\\t\\t}\",\n  fragmentShader: /* glsl */\"\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tuniform vec3 vSunPositionScreenSpace;\\n\\t\\tuniform float fAspect;\\n\\n\\t\\tuniform vec3 sunColor;\\n\\t\\tuniform vec3 bgColor;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvec2 diff = vUv - vSunPositionScreenSpace.xy;\\n\\n\\t\\t// Correct for aspect ratio\\n\\n\\t\\t\\tdiff.x *= fAspect;\\n\\n\\t\\t\\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\\n\\t\\t\\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\\n\\n\\t\\t\\tgl_FragColor.xyz = ( vSunPositionScreenSpace.z > 0.0 ) ? mix( sunColor, bgColor, 1.0 - prop ) : bgColor;\\n\\t\\t\\tgl_FragColor.w = 1.0;\\n\\n\\t\\t}\"\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":1,"column":0},"name":"_three"},{"generated":{"line":7,"column":10},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":13},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":1,"column":0},"name":"require"},{"generated":{"line":7,"column":20},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":6,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":7,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":8,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":9,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":11,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":12,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":13,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":14,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":15,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":16,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":17,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":18,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":19,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":20,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":21,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":22,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":23,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":24,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":25,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":26,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":27,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":28,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":29,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":30,"column":0}},{"generated":{"line":32,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":30,"column":6},"name":"GodRaysDepthMaskShader"},{"generated":{"line":32,"column":26},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":30,"column":28}},{"generated":{"line":32,"column":29},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":30,"column":28},"name":"exports"},{"generated":{"line":32,"column":36},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":30,"column":28}},{"generated":{"line":32,"column":37},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":30,"column":28},"name":"GodRaysDepthMaskShader"},{"generated":{"line":32,"column":59},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":30,"column":28}},{"generated":{"line":32,"column":62},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":30,"column":31}},{"generated":{"line":33,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":32,"column":1},"name":"name"},{"generated":{"line":33,"column":6},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":32,"column":5}},{"generated":{"line":33,"column":8},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":32,"column":7}},{"generated":{"line":33,"column":32},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":32,"column":31}},{"generated":{"line":34,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":34,"column":1},"name":"uniforms"},{"generated":{"line":34,"column":10},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":34,"column":9}},{"generated":{"line":34,"column":12},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":34,"column":11}},{"generated":{"line":35,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":36,"column":2},"name":"tInput"},{"generated":{"line":35,"column":10},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":36,"column":8}},{"generated":{"line":35,"column":12},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":36,"column":10}},{"generated":{"line":36,"column":6},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":37,"column":3},"name":"value"},{"generated":{"line":36,"column":11},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":37,"column":8}},{"generated":{"line":36,"column":13},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":37,"column":10}},{"generated":{"line":37,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":38,"column":2}},{"generated":{"line":38,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":40,"column":1}},{"generated":{"line":38,"column":3},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":40,"column":2}},{"generated":{"line":39,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":42,"column":1},"name":"vertexShader"},{"generated":{"line":39,"column":14},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":42,"column":13}},{"generated":{"line":39,"column":16},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":42,"column":15}},{"generated":{"line":39,"column":180},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":51,"column":4}},{"generated":{"line":40,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":53,"column":1},"name":"fragmentShader"},{"generated":{"line":40,"column":16},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":53,"column":15}},{"generated":{"line":40,"column":18},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":53,"column":17}},{"generated":{"line":41,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":65,"column":0}},{"generated":{"line":41,"column":1},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":65,"column":1}},{"generated":{"line":43,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":68,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":69,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":70,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":71,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":72,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":73,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":74,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":75,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":76,"column":0}},{"generated":{"line":52,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":77,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":78,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":79,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":80,"column":0}},{"generated":{"line":56,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":81,"column":0}},{"generated":{"line":57,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":82,"column":0}},{"generated":{"line":58,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":83,"column":0}},{"generated":{"line":59,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":84,"column":0}},{"generated":{"line":60,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":85,"column":0}},{"generated":{"line":60,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":85,"column":6},"name":"GodRaysGenerateShader"},{"generated":{"line":60,"column":25},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":85,"column":27}},{"generated":{"line":60,"column":28},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":85,"column":27},"name":"exports"},{"generated":{"line":60,"column":35},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":85,"column":27}},{"generated":{"line":60,"column":36},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":85,"column":27},"name":"GodRaysGenerateShader"},{"generated":{"line":60,"column":57},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":85,"column":27}},{"generated":{"line":60,"column":60},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":85,"column":30}},{"generated":{"line":61,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":87,"column":1},"name":"name"},{"generated":{"line":61,"column":6},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":87,"column":5}},{"generated":{"line":61,"column":8},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":87,"column":7}},{"generated":{"line":61,"column":31},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":87,"column":30}},{"generated":{"line":62,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":89,"column":1},"name":"uniforms"},{"generated":{"line":62,"column":10},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":89,"column":9}},{"generated":{"line":62,"column":12},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":89,"column":11}},{"generated":{"line":63,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":91,"column":2},"name":"tInput"},{"generated":{"line":63,"column":10},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":91,"column":8}},{"generated":{"line":63,"column":12},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":91,"column":10}},{"generated":{"line":64,"column":6},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":92,"column":3},"name":"value"},{"generated":{"line":64,"column":11},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":92,"column":8}},{"generated":{"line":64,"column":13},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":92,"column":10}},{"generated":{"line":65,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":93,"column":2}},{"generated":{"line":65,"column":5},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":93,"column":3}},{"generated":{"line":66,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":94,"column":2},"name":"fStepSize"},{"generated":{"line":66,"column":13},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":94,"column":11}},{"generated":{"line":66,"column":15},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":94,"column":13}},{"generated":{"line":67,"column":6},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":95,"column":3},"name":"value"},{"generated":{"line":67,"column":11},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":95,"column":8}},{"generated":{"line":67,"column":13},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":95,"column":10}},{"generated":{"line":68,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":96,"column":2}},{"generated":{"line":68,"column":5},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":96,"column":3}},{"generated":{"line":69,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":97,"column":2},"name":"vSunPositionScreenSpace"},{"generated":{"line":69,"column":27},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":97,"column":25}},{"generated":{"line":69,"column":29},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":97,"column":27}},{"generated":{"line":70,"column":6},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":98,"column":3},"name":"value"},{"generated":{"line":70,"column":11},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":98,"column":8}},{"generated":{"line":70,"column":13},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":98,"column":10}},{"generated":{"line":70,"column":17},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":98,"column":14},"name":"Vector3"},{"generated":{"line":70,"column":31},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":98,"column":21}},{"generated":{"line":70,"column":32},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":98,"column":22}},{"generated":{"line":71,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":99,"column":2}},{"generated":{"line":72,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":101,"column":1}},{"generated":{"line":72,"column":3},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":101,"column":2}},{"generated":{"line":73,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":103,"column":1},"name":"vertexShader"},{"generated":{"line":73,"column":14},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":103,"column":13}},{"generated":{"line":73,"column":16},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":103,"column":15}},{"generated":{"line":73,"column":180},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":112,"column":4}},{"generated":{"line":74,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":114,"column":1},"name":"fragmentShader"},{"generated":{"line":74,"column":16},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":114,"column":15}},{"generated":{"line":74,"column":18},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":114,"column":17}},{"generated":{"line":75,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":200,"column":0}},{"generated":{"line":75,"column":1},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":200,"column":1}},{"generated":{"line":77,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":202,"column":0}},{"generated":{"line":78,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":203,"column":0}},{"generated":{"line":79,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":204,"column":0}},{"generated":{"line":80,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":205,"column":0}},{"generated":{"line":81,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":206,"column":0}},{"generated":{"line":82,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":207,"column":0}},{"generated":{"line":83,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":208,"column":0}},{"generated":{"line":84,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":209,"column":0}},{"generated":{"line":84,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":209,"column":6},"name":"GodRaysCombineShader"},{"generated":{"line":84,"column":24},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":209,"column":26}},{"generated":{"line":84,"column":27},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":209,"column":26},"name":"exports"},{"generated":{"line":84,"column":34},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":209,"column":26}},{"generated":{"line":84,"column":35},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":209,"column":26},"name":"GodRaysCombineShader"},{"generated":{"line":84,"column":55},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":209,"column":26}},{"generated":{"line":84,"column":58},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":209,"column":29}},{"generated":{"line":85,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":211,"column":1},"name":"name"},{"generated":{"line":85,"column":6},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":211,"column":5}},{"generated":{"line":85,"column":8},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":211,"column":7}},{"generated":{"line":85,"column":30},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":211,"column":29}},{"generated":{"line":86,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":213,"column":1},"name":"uniforms"},{"generated":{"line":86,"column":10},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":213,"column":9}},{"generated":{"line":86,"column":12},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":213,"column":11}},{"generated":{"line":87,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":215,"column":2},"name":"tColors"},{"generated":{"line":87,"column":11},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":215,"column":9}},{"generated":{"line":87,"column":13},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":215,"column":11}},{"generated":{"line":88,"column":6},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":216,"column":3},"name":"value"},{"generated":{"line":88,"column":11},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":216,"column":8}},{"generated":{"line":88,"column":13},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":216,"column":10}},{"generated":{"line":89,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":217,"column":2}},{"generated":{"line":89,"column":5},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":217,"column":3}},{"generated":{"line":90,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":219,"column":2},"name":"tGodRays"},{"generated":{"line":90,"column":12},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":219,"column":10}},{"generated":{"line":90,"column":14},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":219,"column":12}},{"generated":{"line":91,"column":6},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":220,"column":3},"name":"value"},{"generated":{"line":91,"column":11},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":220,"column":8}},{"generated":{"line":91,"column":13},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":220,"column":10}},{"generated":{"line":92,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":221,"column":2}},{"generated":{"line":92,"column":5},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":221,"column":3}},{"generated":{"line":93,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":223,"column":2},"name":"fGodRayIntensity"},{"generated":{"line":93,"column":20},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":223,"column":18}},{"generated":{"line":93,"column":22},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":223,"column":20}},{"generated":{"line":94,"column":6},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":224,"column":3},"name":"value"},{"generated":{"line":94,"column":11},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":224,"column":8}},{"generated":{"line":94,"column":13},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":224,"column":10}},{"generated":{"line":95,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":225,"column":2}},{"generated":{"line":96,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":227,"column":1}},{"generated":{"line":96,"column":3},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":227,"column":2}},{"generated":{"line":97,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":229,"column":1},"name":"vertexShader"},{"generated":{"line":97,"column":14},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":229,"column":13}},{"generated":{"line":97,"column":16},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":229,"column":15}},{"generated":{"line":97,"column":183},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":238,"column":4}},{"generated":{"line":98,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":240,"column":1},"name":"fragmentShader"},{"generated":{"line":98,"column":16},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":240,"column":15}},{"generated":{"line":98,"column":18},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":240,"column":17}},{"generated":{"line":99,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":260,"column":0}},{"generated":{"line":99,"column":1},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":260,"column":1}},{"generated":{"line":101,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":263,"column":0}},{"generated":{"line":102,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":264,"column":0}},{"generated":{"line":103,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":265,"column":0}},{"generated":{"line":104,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":266,"column":0}},{"generated":{"line":105,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":267,"column":0}},{"generated":{"line":106,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":268,"column":0}},{"generated":{"line":107,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":269,"column":0}},{"generated":{"line":108,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":270,"column":0}},{"generated":{"line":108,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":270,"column":6},"name":"GodRaysFakeSunShader"},{"generated":{"line":108,"column":24},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":270,"column":26}},{"generated":{"line":108,"column":27},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":270,"column":26},"name":"exports"},{"generated":{"line":108,"column":34},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":270,"column":26}},{"generated":{"line":108,"column":35},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":270,"column":26},"name":"GodRaysFakeSunShader"},{"generated":{"line":108,"column":55},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":270,"column":26}},{"generated":{"line":108,"column":58},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":270,"column":29}},{"generated":{"line":109,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":272,"column":1},"name":"name"},{"generated":{"line":109,"column":6},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":272,"column":5}},{"generated":{"line":109,"column":8},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":272,"column":7}},{"generated":{"line":109,"column":30},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":272,"column":29}},{"generated":{"line":110,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":274,"column":1},"name":"uniforms"},{"generated":{"line":110,"column":10},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":274,"column":9}},{"generated":{"line":110,"column":12},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":274,"column":11}},{"generated":{"line":111,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":276,"column":2},"name":"vSunPositionScreenSpace"},{"generated":{"line":111,"column":27},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":276,"column":25}},{"generated":{"line":111,"column":29},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":276,"column":27}},{"generated":{"line":112,"column":6},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":277,"column":3},"name":"value"},{"generated":{"line":112,"column":11},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":277,"column":8}},{"generated":{"line":112,"column":13},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":277,"column":10}},{"generated":{"line":112,"column":17},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":277,"column":14},"name":"Vector3"},{"generated":{"line":112,"column":31},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":277,"column":21}},{"generated":{"line":112,"column":32},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":277,"column":22}},{"generated":{"line":113,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":278,"column":2}},{"generated":{"line":113,"column":5},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":278,"column":3}},{"generated":{"line":114,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":280,"column":2},"name":"fAspect"},{"generated":{"line":114,"column":11},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":280,"column":9}},{"generated":{"line":114,"column":13},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":280,"column":11}},{"generated":{"line":115,"column":6},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":281,"column":3},"name":"value"},{"generated":{"line":115,"column":11},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":281,"column":8}},{"generated":{"line":115,"column":13},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":281,"column":10}},{"generated":{"line":116,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":282,"column":2}},{"generated":{"line":116,"column":5},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":282,"column":3}},{"generated":{"line":117,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":284,"column":2},"name":"sunColor"},{"generated":{"line":117,"column":12},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":284,"column":10}},{"generated":{"line":117,"column":14},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":284,"column":12}},{"generated":{"line":118,"column":6},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":285,"column":3},"name":"value"},{"generated":{"line":118,"column":11},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":285,"column":8}},{"generated":{"line":118,"column":13},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":285,"column":10}},{"generated":{"line":118,"column":17},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":285,"column":14},"name":"Color"},{"generated":{"line":118,"column":29},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":285,"column":19}},{"generated":{"line":118,"column":30},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":285,"column":21}},{"generated":{"line":118,"column":38},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":285,"column":30}},{"generated":{"line":119,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":286,"column":2}},{"generated":{"line":119,"column":5},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":286,"column":3}},{"generated":{"line":120,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":288,"column":2},"name":"bgColor"},{"generated":{"line":120,"column":11},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":288,"column":9}},{"generated":{"line":120,"column":13},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":288,"column":11}},{"generated":{"line":121,"column":6},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":289,"column":3},"name":"value"},{"generated":{"line":121,"column":11},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":289,"column":8}},{"generated":{"line":121,"column":13},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":289,"column":10}},{"generated":{"line":121,"column":17},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":289,"column":14},"name":"Color"},{"generated":{"line":121,"column":29},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":289,"column":19}},{"generated":{"line":121,"column":30},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":289,"column":21}},{"generated":{"line":121,"column":38},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":289,"column":30}},{"generated":{"line":122,"column":4},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":290,"column":2}},{"generated":{"line":123,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":292,"column":1}},{"generated":{"line":123,"column":3},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":292,"column":2}},{"generated":{"line":124,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":294,"column":1},"name":"vertexShader"},{"generated":{"line":124,"column":14},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":294,"column":13}},{"generated":{"line":124,"column":16},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":294,"column":15}},{"generated":{"line":124,"column":183},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":303,"column":4}},{"generated":{"line":125,"column":2},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":305,"column":1},"name":"fragmentShader"},{"generated":{"line":125,"column":16},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":305,"column":15}},{"generated":{"line":125,"column":18},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":305,"column":17}},{"generated":{"line":126,"column":0},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":331,"column":0}},{"generated":{"line":126,"column":1},"source":"node_modules/three/examples/jsm/shaders/GodRaysShader.js","original":{"line":331,"column":1}}],"sources":{"node_modules/three/examples/jsm/shaders/GodRaysShader.js":"import {\n\tColor,\n\tVector3\n} from 'three';\n\n/**\n * @module GodRaysShader\n * @three_import import * as GodRaysShader from 'three/addons/shaders/GodRaysShader.js';\n */\n\n/**\n * God-rays (crepuscular rays)\n *\n * Similar implementation to the one used by Crytek for CryEngine 2 [Sousa2008].\n * Blurs a mask generated from the depth map along radial lines emanating from the light\n * source. The blur repeatedly applies a blur filter of increasing support but constant\n * sample count to produce a blur filter with large support.\n *\n * My implementation performs 3 passes, similar to the implementation from Sousa. I found\n * just 6 samples per pass produced acceptable results. The blur is applied three times,\n * with decreasing filter support. The result is equivalent to a single pass with\n * 6*6*6 = 216 samples.\n *\n * References:\n * - [Sousa2008, Crysis Next Gen Effects, GDC2008]{@link http://www.crytek.com/sites/default/files/GDC08_SousaT_CrysisEffects.ppt}.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst GodRaysDepthMaskShader = {\n\n\tname: 'GodRaysDepthMaskShader',\n\n\tuniforms: {\n\n\t\ttInput: {\n\t\t\tvalue: null\n\t\t}\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t vUv = uv;\n\t\t gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t }`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tuniform sampler2D tInput;\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = vec4( 1.0 ) - texture2D( tInput, vUv );\n\n\t\t}`\n\n};\n\n\n/**\n * The god-ray generation shader.\n *\n * First pass:\n *\n * The depth map is blurred along radial lines towards the \"sun\". The\n * output is written to a temporary render target (I used a 1/4 sized\n * target).\n *\n * Pass two & three:\n *\n * The results of the previous pass are re-blurred, each time with a\n * decreased distance between samples.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst GodRaysGenerateShader = {\n\n\tname: 'GodRaysGenerateShader',\n\n\tuniforms: {\n\n\t\ttInput: {\n\t\t\tvalue: null\n\t\t},\n\t\tfStepSize: {\n\t\t\tvalue: 1.0\n\t\t},\n\t\tvSunPositionScreenSpace: {\n\t\t\tvalue: new Vector3()\n\t\t}\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t vUv = uv;\n\t\t gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t }`,\n\n\tfragmentShader: /* glsl */`\n\n\t\t#define TAPS_PER_PASS 6.0\n\n\t\tvarying vec2 vUv;\n\n\t\tuniform sampler2D tInput;\n\n\t\tuniform vec3 vSunPositionScreenSpace;\n\t\tuniform float fStepSize; // filter step size\n\n\t\tvoid main() {\n\n\t\t// delta from current pixel to \"sun\" position\n\n\t\t\tvec2 delta = vSunPositionScreenSpace.xy - vUv;\n\t\t\tfloat dist = length( delta );\n\n\t\t// Step vector (uv space)\n\n\t\t\tvec2 stepv = fStepSize * delta / dist;\n\n\t\t// Number of iterations between pixel and sun\n\n\t\t\tfloat iters = dist/fStepSize;\n\n\t\t\tvec2 uv = vUv.xy;\n\t\t\tfloat col = 0.0;\n\n\t\t// This breaks ANGLE in Chrome 22\n\t\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n\t\t/*\n\t\t// Unrolling didn't do much on my hardware (ATI Mobility Radeon 3450),\n\t\t// so i've just left the loop\n\n\t\t\"for ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\",\n\n\t\t// Accumulate samples, making sure we don't walk past the light source.\n\n\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t// mode, with a black border color. I don't think this is currently\n\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t// not specifically handled.\n\n\t\t\"\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\",\n\t\t\"\tuv += stepv;\",\n\n\t\t\"}\",\n\t\t*/\n\n\t\t// Unrolling loop manually makes it work in ANGLE\n\n\t\t\tfloat f = min( 1.0, max( vSunPositionScreenSpace.z / 1000.0, 0.0 ) ); // used to fade out godrays\n\n\t\t\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\n\t\t\tuv += stepv;\n\n\t\t\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\n\t\t\tuv += stepv;\n\n\t\t\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\n\t\t\tuv += stepv;\n\n\t\t\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\n\t\t\tuv += stepv;\n\n\t\t\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\n\t\t\tuv += stepv;\n\n\t\t\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\n\t\t\tuv += stepv;\n\n\t\t// Should technically be dividing by 'iters but 'TAPS_PER_PASS' smooths out\n\t\t// objectionable artifacts, in particular near the sun position. The side\n\t\t// effect is that the result is darker than it should be around the sun, as\n\t\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t\t// When the result is inverted (in the shader 'godrays_combine this produces\n\t\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\t\t\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\t\t\tgl_FragColor.a = 1.0;\n\n\t\t}`\n\n};\n\n/**\n * Additively applies god rays from texture tGodRays to a background (tColors).\n * fGodRayIntensity attenuates the god rays.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst GodRaysCombineShader = {\n\n\tname: 'GodRaysCombineShader',\n\n\tuniforms: {\n\n\t\ttColors: {\n\t\t\tvalue: null\n\t\t},\n\n\t\ttGodRays: {\n\t\t\tvalue: null\n\t\t},\n\n\t\tfGodRayIntensity: {\n\t\t\tvalue: 0.69\n\t\t}\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tuniform sampler2D tColors;\n\t\tuniform sampler2D tGodRays;\n\n\t\tuniform float fGodRayIntensity;\n\n\t\tvoid main() {\n\n\t\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t\t// before being combined with tColors\n\n\t\t\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\t\t\tgl_FragColor.a = 1.0;\n\n\t\t}`\n\n};\n\n\n/**\n * A dodgy sun/sky shader. Makes a bright spot at the sun location. Would be\n * cheaper/faster/simpler to implement this as a simple sun sprite.\n *\n * @constant\n * @type {Object}\n */\nconst GodRaysFakeSunShader = {\n\n\tname: 'GodRaysFakeSunShader',\n\n\tuniforms: {\n\n\t\tvSunPositionScreenSpace: {\n\t\t\tvalue: new Vector3()\n\t\t},\n\n\t\tfAspect: {\n\t\t\tvalue: 1.0\n\t\t},\n\n\t\tsunColor: {\n\t\t\tvalue: new Color( 0xffee00 )\n\t\t},\n\n\t\tbgColor: {\n\t\t\tvalue: new Color( 0x000000 )\n\t\t}\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tuniform vec3 vSunPositionScreenSpace;\n\t\tuniform float fAspect;\n\n\t\tuniform vec3 sunColor;\n\t\tuniform vec3 bgColor;\n\n\t\tvoid main() {\n\n\t\t\tvec2 diff = vUv - vSunPositionScreenSpace.xy;\n\n\t\t// Correct for aspect ratio\n\n\t\t\tdiff.x *= fAspect;\n\n\t\t\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\t\t\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\t\t\tgl_FragColor.xyz = ( vSunPositionScreenSpace.z > 0.0 ) ? mix( sunColor, bgColor, 1.0 - prop ) : bgColor;\n\t\t\tgl_FragColor.w = 1.0;\n\n\t\t}`\n\n};\n\nexport { GodRaysDepthMaskShader, GodRaysGenerateShader, GodRaysCombineShader, GodRaysFakeSunShader };\n"},"lineCount":null}},"error":null,"hash":"428923ddfeeef6fab7dcf53022d53161","cacheData":{"env":{}}}