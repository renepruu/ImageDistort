{"id":"node_modules/three/examples/jsm/shaders/SSRShader.js","dependencies":[{"name":"/Users/home/Documents/projektid/three/package.json","includedInParent":true,"mtime":1752075948167},{"name":"/Users/home/Documents/projektid/three/node_modules/three/package.json","includedInParent":true,"mtime":1752055084410},{"name":"three","loc":{"line":4,"column":7,"index":35},"parent":"/Users/home/Documents/projektid/three/node_modules/three/examples/jsm/shaders/SSRShader.js","resolved":"/Users/home/Documents/projektid/three/node_modules/three/build/three.module.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SSRShader = exports.SSRDepthShader = exports.SSRBlurShader = void 0;\nvar _three = require(\"three\");\n/**\n * A collection of shaders used for SSR.\n *\n * References:\n * - [3D Game Shaders For Beginners, Screen Space Reflection (SSR)]{@link https://lettier.github.io/3d-game-shaders-for-beginners/screen-space-reflection.html}.\n *\n * @module SSRShader\n * @three_import import * as SSRShader from 'three/addons/shaders/SSRShader.js';\n */\n\n/**\n * SSR shader.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nvar SSRShader = exports.SSRShader = {\n  name: 'SSRShader',\n  defines: {\n    MAX_STEP: 0,\n    PERSPECTIVE_CAMERA: true,\n    DISTANCE_ATTENUATION: true,\n    FRESNEL: true,\n    INFINITE_THICK: false,\n    SELECTIVE: false\n  },\n  uniforms: {\n    'tDiffuse': {\n      value: null\n    },\n    'tNormal': {\n      value: null\n    },\n    'tMetalness': {\n      value: null\n    },\n    'tDepth': {\n      value: null\n    },\n    'cameraNear': {\n      value: null\n    },\n    'cameraFar': {\n      value: null\n    },\n    'resolution': {\n      value: new _three.Vector2()\n    },\n    'cameraProjectionMatrix': {\n      value: new _three.Matrix4()\n    },\n    'cameraInverseProjectionMatrix': {\n      value: new _three.Matrix4()\n    },\n    'opacity': {\n      value: .5\n    },\n    'maxDistance': {\n      value: 180\n    },\n    'cameraRange': {\n      value: 0\n    },\n    'thickness': {\n      value: .018\n    }\n  },\n  vertexShader: /* glsl */\"\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvUv = uv;\\n\\n\\t\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n\\t\\t}\\n\\n\\t\",\n  fragmentShader: /* glsl */\"\\n\\t\\t// precision highp float;\\n\\t\\tprecision highp sampler2D;\\n\\t\\tvarying vec2 vUv;\\n\\t\\tuniform sampler2D tDepth;\\n\\t\\tuniform sampler2D tNormal;\\n\\t\\tuniform sampler2D tMetalness;\\n\\t\\tuniform sampler2D tDiffuse;\\n\\t\\tuniform float cameraRange;\\n\\t\\tuniform vec2 resolution;\\n\\t\\tuniform float opacity;\\n\\t\\tuniform float cameraNear;\\n\\t\\tuniform float cameraFar;\\n\\t\\tuniform float maxDistance;\\n\\t\\tuniform float thickness;\\n\\t\\tuniform mat4 cameraProjectionMatrix;\\n\\t\\tuniform mat4 cameraInverseProjectionMatrix;\\n\\t\\t#include <packing>\\n\\t\\tfloat pointToLineDistance(vec3 x0, vec3 x1, vec3 x2) {\\n\\t\\t\\t//x0: point, x1: linePointA, x2: linePointB\\n\\t\\t\\t//https://mathworld.wolfram.com/Point-LineDistance3-Dimensional.html\\n\\t\\t\\treturn length(cross(x0-x1,x0-x2))/length(x2-x1);\\n\\t\\t}\\n\\t\\tfloat pointPlaneDistance(vec3 point,vec3 planePoint,vec3 planeNormal){\\n\\t\\t\\t// https://mathworld.wolfram.com/Point-PlaneDistance.html\\n\\t\\t\\t//// https://en.wikipedia.org/wiki/Plane_(geometry)\\n\\t\\t\\t//// http://paulbourke.net/geometry/pointlineplane/\\n\\t\\t\\tfloat a=planeNormal.x,b=planeNormal.y,c=planeNormal.z;\\n\\t\\t\\tfloat x0=point.x,y0=point.y,z0=point.z;\\n\\t\\t\\tfloat x=planePoint.x,y=planePoint.y,z=planePoint.z;\\n\\t\\t\\tfloat d=-(a*x+b*y+c*z);\\n\\t\\t\\tfloat distance=(a*x0+b*y0+c*z0+d)/sqrt(a*a+b*b+c*c);\\n\\t\\t\\treturn distance;\\n\\t\\t}\\n\\t\\tfloat getDepth( const in vec2 uv ) {\\n\\t\\t\\treturn texture2D( tDepth, uv ).x;\\n\\t\\t}\\n\\t\\tfloat getViewZ( const in float depth ) {\\n\\t\\t\\t#ifdef PERSPECTIVE_CAMERA\\n\\t\\t\\t\\treturn perspectiveDepthToViewZ( depth, cameraNear, cameraFar );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn orthographicDepthToViewZ( depth, cameraNear, cameraFar );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t\\tvec3 getViewPosition( const in vec2 uv, const in float depth/*clip space*/, const in float clipW ) {\\n\\t\\t\\tvec4 clipPosition = vec4( ( vec3( uv, depth ) - 0.5 ) * 2.0, 1.0 );//ndc\\n\\t\\t\\tclipPosition *= clipW; //clip\\n\\t\\t\\treturn ( cameraInverseProjectionMatrix * clipPosition ).xyz;//view\\n\\t\\t}\\n\\t\\tvec3 getViewNormal( const in vec2 uv ) {\\n\\t\\t\\treturn unpackRGBToNormal( texture2D( tNormal, uv ).xyz );\\n\\t\\t}\\n\\t\\tvec2 viewPositionToXY(vec3 viewPosition){\\n\\t\\t\\tvec2 xy;\\n\\t\\t\\tvec4 clip=cameraProjectionMatrix*vec4(viewPosition,1);\\n\\t\\t\\txy=clip.xy;//clip\\n\\t\\t\\tfloat clipW=clip.w;\\n\\t\\t\\txy/=clipW;//NDC\\n\\t\\t\\txy=(xy+1.)/2.;//uv\\n\\t\\t\\txy*=resolution;//screen\\n\\t\\t\\treturn xy;\\n\\t\\t}\\n\\t\\tvoid main(){\\n\\t\\t\\t#ifdef SELECTIVE\\n\\t\\t\\t\\tfloat metalness=texture2D(tMetalness,vUv).r;\\n\\t\\t\\t\\tif(metalness==0.) return;\\n\\t\\t\\t#endif\\n\\n\\t\\t\\tfloat depth = getDepth( vUv );\\n\\t\\t\\tfloat viewZ = getViewZ( depth );\\n\\t\\t\\tif(-viewZ>=cameraFar) return;\\n\\n\\t\\t\\tfloat clipW = cameraProjectionMatrix[2][3] * viewZ+cameraProjectionMatrix[3][3];\\n\\t\\t\\tvec3 viewPosition=getViewPosition( vUv, depth, clipW );\\n\\n\\t\\t\\tvec2 d0=gl_FragCoord.xy;\\n\\t\\t\\tvec2 d1;\\n\\n\\t\\t\\tvec3 viewNormal=getViewNormal( vUv );\\n\\n\\t\\t\\t#ifdef PERSPECTIVE_CAMERA\\n\\t\\t\\t\\tvec3 viewIncidentDir=normalize(viewPosition);\\n\\t\\t\\t\\tvec3 viewReflectDir=reflect(viewIncidentDir,viewNormal);\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec3 viewIncidentDir=vec3(0,0,-1);\\n\\t\\t\\t\\tvec3 viewReflectDir=reflect(viewIncidentDir,viewNormal);\\n\\t\\t\\t#endif\\n\\n\\t\\t\\tfloat maxReflectRayLen=maxDistance/dot(-viewIncidentDir,viewNormal);\\n\\t\\t\\t// dot(a,b)==length(a)*length(b)*cos(theta) // https://www.mathsisfun.com/algebra/vectors-dot-product.html\\n\\t\\t\\t// if(a.isNormalized&&b.isNormalized) dot(a,b)==cos(theta)\\n\\t\\t\\t// maxDistance/maxReflectRayLen=cos(theta)\\n\\t\\t\\t// maxDistance/maxReflectRayLen==dot(a,b)\\n\\t\\t\\t// maxReflectRayLen==maxDistance/dot(a,b)\\n\\n\\t\\t\\tvec3 d1viewPosition=viewPosition+viewReflectDir*maxReflectRayLen;\\n\\t\\t\\t#ifdef PERSPECTIVE_CAMERA\\n\\t\\t\\t\\tif(d1viewPosition.z>-cameraNear){\\n\\t\\t\\t\\t\\t//https://tutorial.math.lamar.edu/Classes/CalcIII/EqnsOfLines.aspx\\n\\t\\t\\t\\t\\tfloat t=(-cameraNear-viewPosition.z)/viewReflectDir.z;\\n\\t\\t\\t\\t\\td1viewPosition=viewPosition+viewReflectDir*t;\\n\\t\\t\\t\\t}\\n\\t\\t\\t#endif\\n\\t\\t\\td1=viewPositionToXY(d1viewPosition);\\n\\n\\t\\t\\tfloat totalLen=length(d1-d0);\\n\\t\\t\\tfloat xLen=d1.x-d0.x;\\n\\t\\t\\tfloat yLen=d1.y-d0.y;\\n\\t\\t\\tfloat totalStep=max(abs(xLen),abs(yLen));\\n\\t\\t\\tfloat xSpan=xLen/totalStep;\\n\\t\\t\\tfloat ySpan=yLen/totalStep;\\n\\t\\t\\tfor(float i=0.;i<float(MAX_STEP);i++){\\n\\t\\t\\t\\tif(i>=totalStep) break;\\n\\t\\t\\t\\tvec2 xy=vec2(d0.x+i*xSpan,d0.y+i*ySpan);\\n\\t\\t\\t\\tif(xy.x<0.||xy.x>resolution.x||xy.y<0.||xy.y>resolution.y) break;\\n\\t\\t\\t\\tfloat s=length(xy-d0)/totalLen;\\n\\t\\t\\t\\tvec2 uv=xy/resolution;\\n\\n\\t\\t\\t\\tfloat d = getDepth(uv);\\n\\t\\t\\t\\tfloat vZ = getViewZ( d );\\n\\t\\t\\t\\tif(-vZ>=cameraFar) continue;\\n\\t\\t\\t\\tfloat cW = cameraProjectionMatrix[2][3] * vZ+cameraProjectionMatrix[3][3];\\n\\t\\t\\t\\tvec3 vP=getViewPosition( uv, d, cW );\\n\\n\\t\\t\\t\\t#ifdef PERSPECTIVE_CAMERA\\n\\t\\t\\t\\t\\t// https://comp.nus.edu.sg/~lowkl/publications/lowk_persp_interp_techrep.pdf\\n\\t\\t\\t\\t\\tfloat recipVPZ=1./viewPosition.z;\\n\\t\\t\\t\\t\\tfloat viewReflectRayZ=1./(recipVPZ+s*(1./d1viewPosition.z-recipVPZ));\\n\\t\\t\\t\\t#else\\n\\t\\t\\t\\t\\tfloat viewReflectRayZ=viewPosition.z+s*(d1viewPosition.z-viewPosition.z);\\n\\t\\t\\t\\t#endif\\n\\n\\t\\t\\t\\t// if(viewReflectRayZ>vZ) continue; // will cause \\\"npm run make-screenshot webgl_postprocessing_ssr\\\" high probability hang.\\n\\t\\t\\t\\t// https://github.com/mrdoob/three.js/pull/21539#issuecomment-821061164\\n\\t\\t\\t\\tif(viewReflectRayZ<=vZ){\\n\\n\\t\\t\\t\\t\\tbool hit;\\n\\t\\t\\t\\t\\t#ifdef INFINITE_THICK\\n\\t\\t\\t\\t\\t\\thit=true;\\n\\t\\t\\t\\t\\t#else\\n\\t\\t\\t\\t\\t\\tfloat away=pointToLineDistance(vP,viewPosition,d1viewPosition);\\n\\n\\t\\t\\t\\t\\t\\tfloat minThickness;\\n\\t\\t\\t\\t\\t\\tvec2 xyNeighbor=xy;\\n\\t\\t\\t\\t\\t\\txyNeighbor.x+=1.;\\n\\t\\t\\t\\t\\t\\tvec2 uvNeighbor=xyNeighbor/resolution;\\n\\t\\t\\t\\t\\t\\tvec3 vPNeighbor=getViewPosition(uvNeighbor,d,cW);\\n\\t\\t\\t\\t\\t\\tminThickness=vPNeighbor.x-vP.x;\\n\\t\\t\\t\\t\\t\\tminThickness*=3.;\\n\\t\\t\\t\\t\\t\\tfloat tk=max(minThickness,thickness);\\n\\n\\t\\t\\t\\t\\t\\thit=away<=tk;\\n\\t\\t\\t\\t\\t#endif\\n\\n\\t\\t\\t\\t\\tif(hit){\\n\\t\\t\\t\\t\\t\\tvec3 vN=getViewNormal( uv );\\n\\t\\t\\t\\t\\t\\tif(dot(viewReflectDir,vN)>=0.) continue;\\n\\t\\t\\t\\t\\t\\tfloat distance=pointPlaneDistance(vP,viewPosition,viewNormal);\\n\\t\\t\\t\\t\\t\\tif(distance>maxDistance) break;\\n\\t\\t\\t\\t\\t\\tfloat op=opacity;\\n\\t\\t\\t\\t\\t\\t#ifdef DISTANCE_ATTENUATION\\n\\t\\t\\t\\t\\t\\t\\tfloat ratio=1.-(distance/maxDistance);\\n\\t\\t\\t\\t\\t\\t\\tfloat attenuation=ratio*ratio;\\n\\t\\t\\t\\t\\t\\t\\top=opacity*attenuation;\\n\\t\\t\\t\\t\\t\\t#endif\\n\\t\\t\\t\\t\\t\\t#ifdef FRESNEL\\n\\t\\t\\t\\t\\t\\t\\tfloat fresnelCoe=(dot(viewIncidentDir,viewReflectDir)+1.)/2.;\\n\\t\\t\\t\\t\\t\\t\\top*=fresnelCoe;\\n\\t\\t\\t\\t\\t\\t#endif\\n\\t\\t\\t\\t\\t\\tvec4 reflectColor=texture2D(tDiffuse,uv);\\n\\t\\t\\t\\t\\t\\tgl_FragColor.xyz=reflectColor.xyz;\\n\\t\\t\\t\\t\\t\\tgl_FragColor.a=op;\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\"\n};\n\n/**\n * SSR Depth shader.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nvar SSRDepthShader = exports.SSRDepthShader = {\n  name: 'SSRDepthShader',\n  defines: {\n    'PERSPECTIVE_CAMERA': 1\n  },\n  uniforms: {\n    'tDepth': {\n      value: null\n    },\n    'cameraNear': {\n      value: null\n    },\n    'cameraFar': {\n      value: null\n    }\n  },\n  vertexShader: /* glsl */\"\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvUv = uv;\\n\\t\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n\\t\\t}\\n\\n\\t\",\n  fragmentShader: /* glsl */\"\\n\\n\\t\\tuniform sampler2D tDepth;\\n\\n\\t\\tuniform float cameraNear;\\n\\t\\tuniform float cameraFar;\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\t#include <packing>\\n\\n\\t\\tfloat getLinearDepth( const in vec2 uv ) {\\n\\n\\t\\t\\t#if PERSPECTIVE_CAMERA == 1\\n\\n\\t\\t\\t\\tfloat fragCoordZ = texture2D( tDepth, uv ).x;\\n\\t\\t\\t\\tfloat viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\\n\\t\\t\\t\\treturn viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\\n\\n\\t\\t\\t#else\\n\\n\\t\\t\\t\\treturn texture2D( tDepth, uv ).x;\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t}\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tfloat depth = getLinearDepth( vUv );\\n\\t\\t\\tfloat d = 1.0 - depth;\\n\\t\\t\\t// d=(d-.999)*1000.;\\n\\t\\t\\tgl_FragColor = vec4( vec3( d ), 1.0 );\\n\\n\\t\\t}\\n\\n\\t\"\n};\n\n/**\n * SSR Blur shader.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nvar SSRBlurShader = exports.SSRBlurShader = {\n  name: 'SSRBlurShader',\n  uniforms: {\n    'tDiffuse': {\n      value: null\n    },\n    'resolution': {\n      value: new _three.Vector2()\n    },\n    'opacity': {\n      value: .5\n    }\n  },\n  vertexShader: /* glsl */\"\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvUv = uv;\\n\\t\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n\\t\\t}\\n\\n\\t\",\n  fragmentShader: /* glsl */\"\\n\\n\\t\\tuniform sampler2D tDiffuse;\\n\\t\\tuniform vec2 resolution;\\n\\t\\tvarying vec2 vUv;\\n\\t\\tvoid main() {\\n\\t\\t\\t//reverse engineering from PhotoShop blur filter, then change coefficient\\n\\n\\t\\t\\tvec2 texelSize = ( 1.0 / resolution );\\n\\n\\t\\t\\tvec4 c=texture2D(tDiffuse,vUv);\\n\\n\\t\\t\\tvec2 offset;\\n\\n\\t\\t\\toffset=(vec2(-1,0))*texelSize;\\n\\t\\t\\tvec4 cl=texture2D(tDiffuse,vUv+offset);\\n\\n\\t\\t\\toffset=(vec2(1,0))*texelSize;\\n\\t\\t\\tvec4 cr=texture2D(tDiffuse,vUv+offset);\\n\\n\\t\\t\\toffset=(vec2(0,-1))*texelSize;\\n\\t\\t\\tvec4 cb=texture2D(tDiffuse,vUv+offset);\\n\\n\\t\\t\\toffset=(vec2(0,1))*texelSize;\\n\\t\\t\\tvec4 ct=texture2D(tDiffuse,vUv+offset);\\n\\n\\t\\t\\t// float coeCenter=.5;\\n\\t\\t\\t// float coeSide=.125;\\n\\t\\t\\tfloat coeCenter=.2;\\n\\t\\t\\tfloat coeSide=.2;\\n\\t\\t\\tfloat a=c.a*coeCenter+cl.a*coeSide+cr.a*coeSide+cb.a*coeSide+ct.a*coeSide;\\n\\t\\t\\tvec3 rgb=(c.rgb*c.a*coeCenter+cl.rgb*cl.a*coeSide+cr.rgb*cr.a*coeSide+cb.rgb*cb.a*coeSide+ct.rgb*ct.a*coeSide)/a;\\n\\t\\t\\tgl_FragColor=vec4(rgb,a);\\n\\n\\t\\t}\\n\\t\"\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":1,"column":0},"name":"_three"},{"generated":{"line":7,"column":10},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":1,"column":0},"name":"require"},{"generated":{"line":7,"column":20},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":7,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":8,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":9,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":10,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":11,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":12,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":13,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":14,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":15,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":17,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":18,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":19,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":20,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":21,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":22,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":23,"column":0}},{"generated":{"line":24,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":23,"column":6},"name":"SSRShader"},{"generated":{"line":24,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":23,"column":15}},{"generated":{"line":24,"column":16},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":23,"column":15},"name":"exports"},{"generated":{"line":24,"column":23},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":23,"column":15}},{"generated":{"line":24,"column":24},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":23,"column":15},"name":"SSRShader"},{"generated":{"line":24,"column":33},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":23,"column":15}},{"generated":{"line":24,"column":36},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":23,"column":18}},{"generated":{"line":25,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":25,"column":1},"name":"name"},{"generated":{"line":25,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":25,"column":5}},{"generated":{"line":25,"column":8},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":25,"column":7}},{"generated":{"line":25,"column":19},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":25,"column":18}},{"generated":{"line":26,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":27,"column":1},"name":"defines"},{"generated":{"line":26,"column":9},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":27,"column":8}},{"generated":{"line":26,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":27,"column":10}},{"generated":{"line":27,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":28,"column":2},"name":"MAX_STEP"},{"generated":{"line":27,"column":12},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":28,"column":10}},{"generated":{"line":27,"column":14},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":28,"column":12}},{"generated":{"line":27,"column":15},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":28,"column":13}},{"generated":{"line":28,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":29,"column":2},"name":"PERSPECTIVE_CAMERA"},{"generated":{"line":28,"column":22},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":29,"column":20}},{"generated":{"line":28,"column":24},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":29,"column":22}},{"generated":{"line":28,"column":28},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":29,"column":26}},{"generated":{"line":29,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":30,"column":2},"name":"DISTANCE_ATTENUATION"},{"generated":{"line":29,"column":24},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":30,"column":22}},{"generated":{"line":29,"column":26},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":30,"column":24}},{"generated":{"line":29,"column":30},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":30,"column":28}},{"generated":{"line":30,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":31,"column":2},"name":"FRESNEL"},{"generated":{"line":30,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":31,"column":9}},{"generated":{"line":30,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":31,"column":11}},{"generated":{"line":30,"column":17},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":31,"column":15}},{"generated":{"line":31,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":32,"column":2},"name":"INFINITE_THICK"},{"generated":{"line":31,"column":18},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":32,"column":16}},{"generated":{"line":31,"column":20},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":32,"column":18}},{"generated":{"line":31,"column":25},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":32,"column":23}},{"generated":{"line":32,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":33,"column":2},"name":"SELECTIVE"},{"generated":{"line":32,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":33,"column":11}},{"generated":{"line":32,"column":15},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":33,"column":13}},{"generated":{"line":33,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":34,"column":1}},{"generated":{"line":33,"column":3},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":34,"column":2}},{"generated":{"line":34,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":36,"column":1},"name":"uniforms"},{"generated":{"line":34,"column":10},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":36,"column":9}},{"generated":{"line":34,"column":12},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":36,"column":11}},{"generated":{"line":35,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":38,"column":2}},{"generated":{"line":35,"column":14},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":38,"column":12}},{"generated":{"line":35,"column":16},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":38,"column":14}},{"generated":{"line":36,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":38,"column":16},"name":"value"},{"generated":{"line":36,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":38,"column":21}},{"generated":{"line":36,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":38,"column":23}},{"generated":{"line":37,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":38,"column":28}},{"generated":{"line":37,"column":5},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":38,"column":29}},{"generated":{"line":38,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":39,"column":2}},{"generated":{"line":38,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":39,"column":11}},{"generated":{"line":38,"column":15},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":39,"column":13}},{"generated":{"line":39,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":39,"column":15},"name":"value"},{"generated":{"line":39,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":39,"column":20}},{"generated":{"line":39,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":39,"column":22}},{"generated":{"line":40,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":39,"column":27}},{"generated":{"line":40,"column":5},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":39,"column":28}},{"generated":{"line":41,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":40,"column":2}},{"generated":{"line":41,"column":16},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":40,"column":14}},{"generated":{"line":41,"column":18},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":40,"column":16}},{"generated":{"line":42,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":40,"column":18},"name":"value"},{"generated":{"line":42,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":40,"column":23}},{"generated":{"line":42,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":40,"column":25}},{"generated":{"line":43,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":40,"column":30}},{"generated":{"line":43,"column":5},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":40,"column":31}},{"generated":{"line":44,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":41,"column":2}},{"generated":{"line":44,"column":12},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":41,"column":10}},{"generated":{"line":44,"column":14},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":41,"column":12}},{"generated":{"line":45,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":41,"column":14},"name":"value"},{"generated":{"line":45,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":41,"column":19}},{"generated":{"line":45,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":41,"column":21}},{"generated":{"line":46,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":41,"column":26}},{"generated":{"line":46,"column":5},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":41,"column":27}},{"generated":{"line":47,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":42,"column":2}},{"generated":{"line":47,"column":16},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":42,"column":14}},{"generated":{"line":47,"column":18},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":42,"column":16}},{"generated":{"line":48,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":42,"column":18},"name":"value"},{"generated":{"line":48,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":42,"column":23}},{"generated":{"line":48,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":42,"column":25}},{"generated":{"line":49,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":42,"column":30}},{"generated":{"line":49,"column":5},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":42,"column":31}},{"generated":{"line":50,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":43,"column":2}},{"generated":{"line":50,"column":15},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":43,"column":13}},{"generated":{"line":50,"column":17},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":43,"column":15}},{"generated":{"line":51,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":43,"column":17},"name":"value"},{"generated":{"line":51,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":43,"column":22}},{"generated":{"line":51,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":43,"column":24}},{"generated":{"line":52,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":43,"column":29}},{"generated":{"line":52,"column":5},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":43,"column":30}},{"generated":{"line":53,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":44,"column":2}},{"generated":{"line":53,"column":16},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":44,"column":14}},{"generated":{"line":53,"column":18},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":44,"column":16}},{"generated":{"line":54,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":44,"column":18},"name":"value"},{"generated":{"line":54,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":44,"column":23}},{"generated":{"line":54,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":44,"column":25}},{"generated":{"line":54,"column":17},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":44,"column":29},"name":"Vector2"},{"generated":{"line":54,"column":31},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":44,"column":36}},{"generated":{"line":54,"column":32},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":44,"column":37}},{"generated":{"line":55,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":44,"column":39}},{"generated":{"line":55,"column":5},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":44,"column":40}},{"generated":{"line":56,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":45,"column":2}},{"generated":{"line":56,"column":28},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":45,"column":26}},{"generated":{"line":56,"column":30},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":45,"column":28}},{"generated":{"line":57,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":45,"column":30},"name":"value"},{"generated":{"line":57,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":45,"column":35}},{"generated":{"line":57,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":45,"column":37}},{"generated":{"line":57,"column":17},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":45,"column":41},"name":"Matrix4"},{"generated":{"line":57,"column":31},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":45,"column":48}},{"generated":{"line":57,"column":32},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":45,"column":49}},{"generated":{"line":58,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":45,"column":51}},{"generated":{"line":58,"column":5},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":45,"column":52}},{"generated":{"line":59,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":46,"column":2}},{"generated":{"line":59,"column":35},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":46,"column":33}},{"generated":{"line":59,"column":37},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":46,"column":35}},{"generated":{"line":60,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":46,"column":37},"name":"value"},{"generated":{"line":60,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":46,"column":42}},{"generated":{"line":60,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":46,"column":44}},{"generated":{"line":60,"column":17},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":46,"column":48},"name":"Matrix4"},{"generated":{"line":60,"column":31},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":46,"column":55}},{"generated":{"line":60,"column":32},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":46,"column":56}},{"generated":{"line":61,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":46,"column":58}},{"generated":{"line":61,"column":5},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":46,"column":59}},{"generated":{"line":62,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":47,"column":2}},{"generated":{"line":62,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":47,"column":11}},{"generated":{"line":62,"column":15},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":47,"column":13}},{"generated":{"line":63,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":47,"column":15},"name":"value"},{"generated":{"line":63,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":47,"column":20}},{"generated":{"line":63,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":47,"column":22}},{"generated":{"line":64,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":47,"column":25}},{"generated":{"line":64,"column":5},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":47,"column":26}},{"generated":{"line":65,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":48,"column":2}},{"generated":{"line":65,"column":17},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":48,"column":15}},{"generated":{"line":65,"column":19},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":48,"column":17}},{"generated":{"line":66,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":48,"column":19},"name":"value"},{"generated":{"line":66,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":48,"column":24}},{"generated":{"line":66,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":48,"column":26}},{"generated":{"line":67,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":48,"column":30}},{"generated":{"line":67,"column":5},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":48,"column":31}},{"generated":{"line":68,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":49,"column":2}},{"generated":{"line":68,"column":17},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":49,"column":15}},{"generated":{"line":68,"column":19},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":49,"column":17}},{"generated":{"line":69,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":49,"column":19},"name":"value"},{"generated":{"line":69,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":49,"column":24}},{"generated":{"line":69,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":49,"column":26}},{"generated":{"line":70,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":49,"column":28}},{"generated":{"line":70,"column":5},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":49,"column":29}},{"generated":{"line":71,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":50,"column":2}},{"generated":{"line":71,"column":15},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":50,"column":13}},{"generated":{"line":71,"column":17},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":50,"column":15}},{"generated":{"line":72,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":50,"column":17},"name":"value"},{"generated":{"line":72,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":50,"column":22}},{"generated":{"line":72,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":50,"column":24}},{"generated":{"line":73,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":50,"column":29}},{"generated":{"line":74,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":52,"column":1}},{"generated":{"line":74,"column":3},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":52,"column":2}},{"generated":{"line":75,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":54,"column":1},"name":"vertexShader"},{"generated":{"line":75,"column":14},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":54,"column":13}},{"generated":{"line":75,"column":16},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":54,"column":15}},{"generated":{"line":75,"column":191},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":66,"column":2}},{"generated":{"line":76,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":68,"column":1},"name":"fragmentShader"},{"generated":{"line":76,"column":16},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":68,"column":15}},{"generated":{"line":76,"column":18},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":68,"column":17}},{"generated":{"line":77,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":247,"column":0}},{"generated":{"line":77,"column":1},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":247,"column":1}},{"generated":{"line":79,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":249,"column":0}},{"generated":{"line":80,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":250,"column":0}},{"generated":{"line":81,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":251,"column":0}},{"generated":{"line":82,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":252,"column":0}},{"generated":{"line":83,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":253,"column":0}},{"generated":{"line":84,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":254,"column":0}},{"generated":{"line":85,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":255,"column":0}},{"generated":{"line":85,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":255,"column":6},"name":"SSRDepthShader"},{"generated":{"line":85,"column":18},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":255,"column":20}},{"generated":{"line":85,"column":21},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":255,"column":20},"name":"exports"},{"generated":{"line":85,"column":28},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":255,"column":20}},{"generated":{"line":85,"column":29},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":255,"column":20},"name":"SSRDepthShader"},{"generated":{"line":85,"column":43},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":255,"column":20}},{"generated":{"line":85,"column":46},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":255,"column":23}},{"generated":{"line":86,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":257,"column":1},"name":"name"},{"generated":{"line":86,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":257,"column":5}},{"generated":{"line":86,"column":8},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":257,"column":7}},{"generated":{"line":86,"column":24},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":257,"column":23}},{"generated":{"line":87,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":259,"column":1},"name":"defines"},{"generated":{"line":87,"column":9},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":259,"column":8}},{"generated":{"line":87,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":259,"column":10}},{"generated":{"line":88,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":260,"column":2}},{"generated":{"line":88,"column":24},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":260,"column":22}},{"generated":{"line":88,"column":26},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":260,"column":24}},{"generated":{"line":89,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":261,"column":1}},{"generated":{"line":89,"column":3},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":261,"column":2}},{"generated":{"line":90,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":263,"column":1},"name":"uniforms"},{"generated":{"line":90,"column":10},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":263,"column":9}},{"generated":{"line":90,"column":12},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":263,"column":11}},{"generated":{"line":91,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":265,"column":2}},{"generated":{"line":91,"column":12},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":265,"column":10}},{"generated":{"line":91,"column":14},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":265,"column":12}},{"generated":{"line":92,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":265,"column":14},"name":"value"},{"generated":{"line":92,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":265,"column":19}},{"generated":{"line":92,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":265,"column":21}},{"generated":{"line":93,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":265,"column":26}},{"generated":{"line":93,"column":5},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":265,"column":27}},{"generated":{"line":94,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":266,"column":2}},{"generated":{"line":94,"column":16},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":266,"column":14}},{"generated":{"line":94,"column":18},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":266,"column":16}},{"generated":{"line":95,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":266,"column":18},"name":"value"},{"generated":{"line":95,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":266,"column":23}},{"generated":{"line":95,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":266,"column":25}},{"generated":{"line":96,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":266,"column":30}},{"generated":{"line":96,"column":5},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":266,"column":31}},{"generated":{"line":97,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":267,"column":2}},{"generated":{"line":97,"column":15},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":267,"column":13}},{"generated":{"line":97,"column":17},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":267,"column":15}},{"generated":{"line":98,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":267,"column":17},"name":"value"},{"generated":{"line":98,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":267,"column":22}},{"generated":{"line":98,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":267,"column":24}},{"generated":{"line":99,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":267,"column":29}},{"generated":{"line":100,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":269,"column":1}},{"generated":{"line":100,"column":3},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":269,"column":2}},{"generated":{"line":101,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":271,"column":1},"name":"vertexShader"},{"generated":{"line":101,"column":14},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":271,"column":13}},{"generated":{"line":101,"column":16},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":271,"column":15}},{"generated":{"line":101,"column":189},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":282,"column":2}},{"generated":{"line":102,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":284,"column":1},"name":"fragmentShader"},{"generated":{"line":102,"column":16},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":284,"column":15}},{"generated":{"line":102,"column":18},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":284,"column":17}},{"generated":{"line":103,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":322,"column":0}},{"generated":{"line":103,"column":1},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":322,"column":1}},{"generated":{"line":105,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":324,"column":0}},{"generated":{"line":106,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":325,"column":0}},{"generated":{"line":107,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":326,"column":0}},{"generated":{"line":108,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":327,"column":0}},{"generated":{"line":109,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":328,"column":0}},{"generated":{"line":110,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":329,"column":0}},{"generated":{"line":111,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":330,"column":0}},{"generated":{"line":111,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":330,"column":6},"name":"SSRBlurShader"},{"generated":{"line":111,"column":17},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":330,"column":19}},{"generated":{"line":111,"column":20},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":330,"column":19},"name":"exports"},{"generated":{"line":111,"column":27},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":330,"column":19}},{"generated":{"line":111,"column":28},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":330,"column":19},"name":"SSRBlurShader"},{"generated":{"line":111,"column":41},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":330,"column":19}},{"generated":{"line":111,"column":44},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":330,"column":22}},{"generated":{"line":112,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":332,"column":1},"name":"name"},{"generated":{"line":112,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":332,"column":5}},{"generated":{"line":112,"column":8},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":332,"column":7}},{"generated":{"line":112,"column":23},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":332,"column":22}},{"generated":{"line":113,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":334,"column":1},"name":"uniforms"},{"generated":{"line":113,"column":10},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":334,"column":9}},{"generated":{"line":113,"column":12},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":334,"column":11}},{"generated":{"line":114,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":336,"column":2}},{"generated":{"line":114,"column":14},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":336,"column":12}},{"generated":{"line":114,"column":16},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":336,"column":14}},{"generated":{"line":115,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":336,"column":16},"name":"value"},{"generated":{"line":115,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":336,"column":21}},{"generated":{"line":115,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":336,"column":23}},{"generated":{"line":116,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":336,"column":28}},{"generated":{"line":116,"column":5},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":336,"column":29}},{"generated":{"line":117,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":337,"column":2}},{"generated":{"line":117,"column":16},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":337,"column":14}},{"generated":{"line":117,"column":18},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":337,"column":16}},{"generated":{"line":118,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":337,"column":18},"name":"value"},{"generated":{"line":118,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":337,"column":23}},{"generated":{"line":118,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":337,"column":25}},{"generated":{"line":118,"column":17},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":337,"column":29},"name":"Vector2"},{"generated":{"line":118,"column":31},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":337,"column":36}},{"generated":{"line":118,"column":32},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":337,"column":37}},{"generated":{"line":119,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":337,"column":39}},{"generated":{"line":119,"column":5},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":337,"column":40}},{"generated":{"line":120,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":338,"column":2}},{"generated":{"line":120,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":338,"column":11}},{"generated":{"line":120,"column":15},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":338,"column":13}},{"generated":{"line":121,"column":6},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":338,"column":15},"name":"value"},{"generated":{"line":121,"column":11},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":338,"column":20}},{"generated":{"line":121,"column":13},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":338,"column":22}},{"generated":{"line":122,"column":4},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":338,"column":25}},{"generated":{"line":123,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":340,"column":1}},{"generated":{"line":123,"column":3},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":340,"column":2}},{"generated":{"line":124,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":342,"column":1},"name":"vertexShader"},{"generated":{"line":124,"column":14},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":342,"column":13}},{"generated":{"line":124,"column":16},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":342,"column":15}},{"generated":{"line":124,"column":189},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":353,"column":2}},{"generated":{"line":125,"column":2},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":355,"column":1},"name":"fragmentShader"},{"generated":{"line":125,"column":16},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":355,"column":15}},{"generated":{"line":125,"column":18},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":355,"column":17}},{"generated":{"line":126,"column":0},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":393,"column":0}},{"generated":{"line":126,"column":1},"source":"node_modules/three/examples/jsm/shaders/SSRShader.js","original":{"line":393,"column":1}}],"sources":{"node_modules/three/examples/jsm/shaders/SSRShader.js":"import {\n\tMatrix4,\n\tVector2\n} from 'three';\n\n\n/**\n * A collection of shaders used for SSR.\n *\n * References:\n * - [3D Game Shaders For Beginners, Screen Space Reflection (SSR)]{@link https://lettier.github.io/3d-game-shaders-for-beginners/screen-space-reflection.html}.\n *\n * @module SSRShader\n * @three_import import * as SSRShader from 'three/addons/shaders/SSRShader.js';\n */\n\n/**\n * SSR shader.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst SSRShader = {\n\n\tname: 'SSRShader',\n\n\tdefines: {\n\t\tMAX_STEP: 0,\n\t\tPERSPECTIVE_CAMERA: true,\n\t\tDISTANCE_ATTENUATION: true,\n\t\tFRESNEL: true,\n\t\tINFINITE_THICK: false,\n\t\tSELECTIVE: false,\n\t},\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'tNormal': { value: null },\n\t\t'tMetalness': { value: null },\n\t\t'tDepth': { value: null },\n\t\t'cameraNear': { value: null },\n\t\t'cameraFar': { value: null },\n\t\t'resolution': { value: new Vector2() },\n\t\t'cameraProjectionMatrix': { value: new Matrix4() },\n\t\t'cameraInverseProjectionMatrix': { value: new Matrix4() },\n\t\t'opacity': { value: .5 },\n\t\t'maxDistance': { value: 180 },\n\t\t'cameraRange': { value: 0 },\n\t\t'thickness': { value: .018 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}\n\n\t`,\n\n\tfragmentShader: /* glsl */`\n\t\t// precision highp float;\n\t\tprecision highp sampler2D;\n\t\tvarying vec2 vUv;\n\t\tuniform sampler2D tDepth;\n\t\tuniform sampler2D tNormal;\n\t\tuniform sampler2D tMetalness;\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform float cameraRange;\n\t\tuniform vec2 resolution;\n\t\tuniform float opacity;\n\t\tuniform float cameraNear;\n\t\tuniform float cameraFar;\n\t\tuniform float maxDistance;\n\t\tuniform float thickness;\n\t\tuniform mat4 cameraProjectionMatrix;\n\t\tuniform mat4 cameraInverseProjectionMatrix;\n\t\t#include <packing>\n\t\tfloat pointToLineDistance(vec3 x0, vec3 x1, vec3 x2) {\n\t\t\t//x0: point, x1: linePointA, x2: linePointB\n\t\t\t//https://mathworld.wolfram.com/Point-LineDistance3-Dimensional.html\n\t\t\treturn length(cross(x0-x1,x0-x2))/length(x2-x1);\n\t\t}\n\t\tfloat pointPlaneDistance(vec3 point,vec3 planePoint,vec3 planeNormal){\n\t\t\t// https://mathworld.wolfram.com/Point-PlaneDistance.html\n\t\t\t//// https://en.wikipedia.org/wiki/Plane_(geometry)\n\t\t\t//// http://paulbourke.net/geometry/pointlineplane/\n\t\t\tfloat a=planeNormal.x,b=planeNormal.y,c=planeNormal.z;\n\t\t\tfloat x0=point.x,y0=point.y,z0=point.z;\n\t\t\tfloat x=planePoint.x,y=planePoint.y,z=planePoint.z;\n\t\t\tfloat d=-(a*x+b*y+c*z);\n\t\t\tfloat distance=(a*x0+b*y0+c*z0+d)/sqrt(a*a+b*b+c*c);\n\t\t\treturn distance;\n\t\t}\n\t\tfloat getDepth( const in vec2 uv ) {\n\t\t\treturn texture2D( tDepth, uv ).x;\n\t\t}\n\t\tfloat getViewZ( const in float depth ) {\n\t\t\t#ifdef PERSPECTIVE_CAMERA\n\t\t\t\treturn perspectiveDepthToViewZ( depth, cameraNear, cameraFar );\n\t\t\t#else\n\t\t\t\treturn orthographicDepthToViewZ( depth, cameraNear, cameraFar );\n\t\t\t#endif\n\t\t}\n\t\tvec3 getViewPosition( const in vec2 uv, const in float depth/*clip space*/, const in float clipW ) {\n\t\t\tvec4 clipPosition = vec4( ( vec3( uv, depth ) - 0.5 ) * 2.0, 1.0 );//ndc\n\t\t\tclipPosition *= clipW; //clip\n\t\t\treturn ( cameraInverseProjectionMatrix * clipPosition ).xyz;//view\n\t\t}\n\t\tvec3 getViewNormal( const in vec2 uv ) {\n\t\t\treturn unpackRGBToNormal( texture2D( tNormal, uv ).xyz );\n\t\t}\n\t\tvec2 viewPositionToXY(vec3 viewPosition){\n\t\t\tvec2 xy;\n\t\t\tvec4 clip=cameraProjectionMatrix*vec4(viewPosition,1);\n\t\t\txy=clip.xy;//clip\n\t\t\tfloat clipW=clip.w;\n\t\t\txy/=clipW;//NDC\n\t\t\txy=(xy+1.)/2.;//uv\n\t\t\txy*=resolution;//screen\n\t\t\treturn xy;\n\t\t}\n\t\tvoid main(){\n\t\t\t#ifdef SELECTIVE\n\t\t\t\tfloat metalness=texture2D(tMetalness,vUv).r;\n\t\t\t\tif(metalness==0.) return;\n\t\t\t#endif\n\n\t\t\tfloat depth = getDepth( vUv );\n\t\t\tfloat viewZ = getViewZ( depth );\n\t\t\tif(-viewZ>=cameraFar) return;\n\n\t\t\tfloat clipW = cameraProjectionMatrix[2][3] * viewZ+cameraProjectionMatrix[3][3];\n\t\t\tvec3 viewPosition=getViewPosition( vUv, depth, clipW );\n\n\t\t\tvec2 d0=gl_FragCoord.xy;\n\t\t\tvec2 d1;\n\n\t\t\tvec3 viewNormal=getViewNormal( vUv );\n\n\t\t\t#ifdef PERSPECTIVE_CAMERA\n\t\t\t\tvec3 viewIncidentDir=normalize(viewPosition);\n\t\t\t\tvec3 viewReflectDir=reflect(viewIncidentDir,viewNormal);\n\t\t\t#else\n\t\t\t\tvec3 viewIncidentDir=vec3(0,0,-1);\n\t\t\t\tvec3 viewReflectDir=reflect(viewIncidentDir,viewNormal);\n\t\t\t#endif\n\n\t\t\tfloat maxReflectRayLen=maxDistance/dot(-viewIncidentDir,viewNormal);\n\t\t\t// dot(a,b)==length(a)*length(b)*cos(theta) // https://www.mathsisfun.com/algebra/vectors-dot-product.html\n\t\t\t// if(a.isNormalized&&b.isNormalized) dot(a,b)==cos(theta)\n\t\t\t// maxDistance/maxReflectRayLen=cos(theta)\n\t\t\t// maxDistance/maxReflectRayLen==dot(a,b)\n\t\t\t// maxReflectRayLen==maxDistance/dot(a,b)\n\n\t\t\tvec3 d1viewPosition=viewPosition+viewReflectDir*maxReflectRayLen;\n\t\t\t#ifdef PERSPECTIVE_CAMERA\n\t\t\t\tif(d1viewPosition.z>-cameraNear){\n\t\t\t\t\t//https://tutorial.math.lamar.edu/Classes/CalcIII/EqnsOfLines.aspx\n\t\t\t\t\tfloat t=(-cameraNear-viewPosition.z)/viewReflectDir.z;\n\t\t\t\t\td1viewPosition=viewPosition+viewReflectDir*t;\n\t\t\t\t}\n\t\t\t#endif\n\t\t\td1=viewPositionToXY(d1viewPosition);\n\n\t\t\tfloat totalLen=length(d1-d0);\n\t\t\tfloat xLen=d1.x-d0.x;\n\t\t\tfloat yLen=d1.y-d0.y;\n\t\t\tfloat totalStep=max(abs(xLen),abs(yLen));\n\t\t\tfloat xSpan=xLen/totalStep;\n\t\t\tfloat ySpan=yLen/totalStep;\n\t\t\tfor(float i=0.;i<float(MAX_STEP);i++){\n\t\t\t\tif(i>=totalStep) break;\n\t\t\t\tvec2 xy=vec2(d0.x+i*xSpan,d0.y+i*ySpan);\n\t\t\t\tif(xy.x<0.||xy.x>resolution.x||xy.y<0.||xy.y>resolution.y) break;\n\t\t\t\tfloat s=length(xy-d0)/totalLen;\n\t\t\t\tvec2 uv=xy/resolution;\n\n\t\t\t\tfloat d = getDepth(uv);\n\t\t\t\tfloat vZ = getViewZ( d );\n\t\t\t\tif(-vZ>=cameraFar) continue;\n\t\t\t\tfloat cW = cameraProjectionMatrix[2][3] * vZ+cameraProjectionMatrix[3][3];\n\t\t\t\tvec3 vP=getViewPosition( uv, d, cW );\n\n\t\t\t\t#ifdef PERSPECTIVE_CAMERA\n\t\t\t\t\t// https://comp.nus.edu.sg/~lowkl/publications/lowk_persp_interp_techrep.pdf\n\t\t\t\t\tfloat recipVPZ=1./viewPosition.z;\n\t\t\t\t\tfloat viewReflectRayZ=1./(recipVPZ+s*(1./d1viewPosition.z-recipVPZ));\n\t\t\t\t#else\n\t\t\t\t\tfloat viewReflectRayZ=viewPosition.z+s*(d1viewPosition.z-viewPosition.z);\n\t\t\t\t#endif\n\n\t\t\t\t// if(viewReflectRayZ>vZ) continue; // will cause \"npm run make-screenshot webgl_postprocessing_ssr\" high probability hang.\n\t\t\t\t// https://github.com/mrdoob/three.js/pull/21539#issuecomment-821061164\n\t\t\t\tif(viewReflectRayZ<=vZ){\n\n\t\t\t\t\tbool hit;\n\t\t\t\t\t#ifdef INFINITE_THICK\n\t\t\t\t\t\thit=true;\n\t\t\t\t\t#else\n\t\t\t\t\t\tfloat away=pointToLineDistance(vP,viewPosition,d1viewPosition);\n\n\t\t\t\t\t\tfloat minThickness;\n\t\t\t\t\t\tvec2 xyNeighbor=xy;\n\t\t\t\t\t\txyNeighbor.x+=1.;\n\t\t\t\t\t\tvec2 uvNeighbor=xyNeighbor/resolution;\n\t\t\t\t\t\tvec3 vPNeighbor=getViewPosition(uvNeighbor,d,cW);\n\t\t\t\t\t\tminThickness=vPNeighbor.x-vP.x;\n\t\t\t\t\t\tminThickness*=3.;\n\t\t\t\t\t\tfloat tk=max(minThickness,thickness);\n\n\t\t\t\t\t\thit=away<=tk;\n\t\t\t\t\t#endif\n\n\t\t\t\t\tif(hit){\n\t\t\t\t\t\tvec3 vN=getViewNormal( uv );\n\t\t\t\t\t\tif(dot(viewReflectDir,vN)>=0.) continue;\n\t\t\t\t\t\tfloat distance=pointPlaneDistance(vP,viewPosition,viewNormal);\n\t\t\t\t\t\tif(distance>maxDistance) break;\n\t\t\t\t\t\tfloat op=opacity;\n\t\t\t\t\t\t#ifdef DISTANCE_ATTENUATION\n\t\t\t\t\t\t\tfloat ratio=1.-(distance/maxDistance);\n\t\t\t\t\t\t\tfloat attenuation=ratio*ratio;\n\t\t\t\t\t\t\top=opacity*attenuation;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t#ifdef FRESNEL\n\t\t\t\t\t\t\tfloat fresnelCoe=(dot(viewIncidentDir,viewReflectDir)+1.)/2.;\n\t\t\t\t\t\t\top*=fresnelCoe;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tvec4 reflectColor=texture2D(tDiffuse,uv);\n\t\t\t\t\t\tgl_FragColor.xyz=reflectColor.xyz;\n\t\t\t\t\t\tgl_FragColor.a=op;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`\n\n};\n\n/**\n * SSR Depth shader.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst SSRDepthShader = {\n\n\tname: 'SSRDepthShader',\n\n\tdefines: {\n\t\t'PERSPECTIVE_CAMERA': 1\n\t},\n\n\tuniforms: {\n\n\t\t'tDepth': { value: null },\n\t\t'cameraNear': { value: null },\n\t\t'cameraFar': { value: null },\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}\n\n\t`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform sampler2D tDepth;\n\n\t\tuniform float cameraNear;\n\t\tuniform float cameraFar;\n\n\t\tvarying vec2 vUv;\n\n\t\t#include <packing>\n\n\t\tfloat getLinearDepth( const in vec2 uv ) {\n\n\t\t\t#if PERSPECTIVE_CAMERA == 1\n\n\t\t\t\tfloat fragCoordZ = texture2D( tDepth, uv ).x;\n\t\t\t\tfloat viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\n\t\t\t\treturn viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\n\n\t\t\t#else\n\n\t\t\t\treturn texture2D( tDepth, uv ).x;\n\n\t\t\t#endif\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tfloat depth = getLinearDepth( vUv );\n\t\t\tfloat d = 1.0 - depth;\n\t\t\t// d=(d-.999)*1000.;\n\t\t\tgl_FragColor = vec4( vec3( d ), 1.0 );\n\n\t\t}\n\n\t`\n\n};\n\n/**\n * SSR Blur shader.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst SSRBlurShader = {\n\n\tname: 'SSRBlurShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'resolution': { value: new Vector2() },\n\t\t'opacity': { value: .5 },\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}\n\n\t`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec2 resolution;\n\t\tvarying vec2 vUv;\n\t\tvoid main() {\n\t\t\t//reverse engineering from PhotoShop blur filter, then change coefficient\n\n\t\t\tvec2 texelSize = ( 1.0 / resolution );\n\n\t\t\tvec4 c=texture2D(tDiffuse,vUv);\n\n\t\t\tvec2 offset;\n\n\t\t\toffset=(vec2(-1,0))*texelSize;\n\t\t\tvec4 cl=texture2D(tDiffuse,vUv+offset);\n\n\t\t\toffset=(vec2(1,0))*texelSize;\n\t\t\tvec4 cr=texture2D(tDiffuse,vUv+offset);\n\n\t\t\toffset=(vec2(0,-1))*texelSize;\n\t\t\tvec4 cb=texture2D(tDiffuse,vUv+offset);\n\n\t\t\toffset=(vec2(0,1))*texelSize;\n\t\t\tvec4 ct=texture2D(tDiffuse,vUv+offset);\n\n\t\t\t// float coeCenter=.5;\n\t\t\t// float coeSide=.125;\n\t\t\tfloat coeCenter=.2;\n\t\t\tfloat coeSide=.2;\n\t\t\tfloat a=c.a*coeCenter+cl.a*coeSide+cr.a*coeSide+cb.a*coeSide+ct.a*coeSide;\n\t\t\tvec3 rgb=(c.rgb*c.a*coeCenter+cl.rgb*cl.a*coeSide+cr.rgb*cr.a*coeSide+cb.rgb*cb.a*coeSide+ct.rgb*ct.a*coeSide)/a;\n\t\t\tgl_FragColor=vec4(rgb,a);\n\n\t\t}\n\t`\n\n\n};\n\nexport { SSRShader, SSRDepthShader, SSRBlurShader };\n"},"lineCount":null}},"error":null,"hash":"7a079060bd09758b564dbb83b65da3f5","cacheData":{"env":{}}}